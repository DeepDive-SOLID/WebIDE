

CREATE DATABASE IF NOT EXISTS webide 
CHARACTER SET utf8mb4 
COLLATE utf8mb4_unicode_ci;

USE webide;

-- 기존 테이블 삭제 (순서 중요 - 외래키 제약조건 때문)
SET FOREIGN_KEY_CHECKS = 0;
DROP TABLE IF EXISTS `테스트케이스`;
DROP TABLE IF EXISTS `코드 파일 경로`;
DROP TABLE IF EXISTS `결과 테이블`;
DROP TABLE IF EXISTS `진행률`;
DROP TABLE IF EXISTS `채팅`;
DROP TABLE IF EXISTS `문제`;
DROP TABLE IF EXISTS `코드 텍스트`;
DROP TABLE IF EXISTS `디렉토리`;
DROP TABLE IF EXISTS `그룹 회원`;
DROP TABLE IF EXISTS `컨테이너`;
DROP TABLE IF EXISTS `그룹`;
DROP TABLE IF EXISTS `회원`;
DROP TABLE IF EXISTS `그룹 권한`;
SET FOREIGN_KEY_CHECKS = 1;

-- 1. 그룹 권한 테이블
CREATE TABLE `그룹 권한` (
    `AUTH_ID` VARCHAR(10) NOT NULL COMMENT '권한 코드',
    `AUTH_NAME` VARCHAR(20) NOT NULL COMMENT '권한 이름',
    PRIMARY KEY (`AUTH_ID`)
);

-- 2. 회원 테이블
CREATE TABLE `회원` (
    `MEMBER_ID` VARCHAR(20) NOT NULL COMMENT '회원 ID',
    `MEMBER_NAME` VARCHAR(10) NOT NULL COMMENT '회원명',
    `MEMBER_PW` VARCHAR(100) NOT NULL COMMENT '회원 비밀번호',
    `MEMBER_EMAIL` VARCHAR(30) NOT NULL COMMENT '회원 이메일',
    `MEMBER_PHONE` VARCHAR(15) NULL COMMENT '회원 전화번호',
    `MEMBER_BIRTH` DATE NULL COMMENT '회원 생년월일',
    `MEMBER_IMG` VARCHAR(500) NULL COMMENT '회원 프로필 이미지',
    PRIMARY KEY (`MEMBER_ID`)
);

-- 3. 그룹 테이블
CREATE TABLE `그룹` (
    `GROUP_ID` INT NOT NULL AUTO_INCREMENT COMMENT '그룹 ID',
    `GROUP_NAME` VARCHAR(100) NOT NULL COMMENT '그룹 이름',
    PRIMARY KEY (`GROUP_ID`)
);

-- 4. 컨테이너 테이블 (수정됨 - OWNER_ID 추가)
CREATE TABLE `컨테이너` (
    `CONTAINER_ID` INT NOT NULL AUTO_INCREMENT COMMENT '방 번호',
    `GROUP_ID` INT NOT NULL COMMENT '그룹 ID',
    `CONTAINER_AUTH` BOOLEAN NOT NULL DEFAULT true COMMENT '컨테이너 공개 여부 (true: public / false: private)',
    `CONTAINER_DATE` DATE NOT NULL DEFAULT (CURRENT_DATE) COMMENT '생성일',
    `CONTAINER_NM` VARCHAR(20) NOT NULL COMMENT '컨테이너 이름',
    `CONTAINER_CONTENT` VARCHAR(200) NULL COMMENT '컨테이너 설명',
    `OWNER_ID` VARCHAR(20) NOT NULL COMMENT '컨테이너 소유자',
    PRIMARY KEY (`CONTAINER_ID`),
    FOREIGN KEY (`GROUP_ID`) REFERENCES `그룹` (`GROUP_ID`),
    FOREIGN KEY (`OWNER_ID`) REFERENCES `회원` (`MEMBER_ID`)
);

-- 5. 그룹 회원 테이블 (수정됨 - 날짜 컬럼 추가)
CREATE TABLE `그룹 회원` (
    `GROUP_USER_ID` INT NOT NULL AUTO_INCREMENT COMMENT '그룹 유저 PK',
    `GROUP_ID` INT NOT NULL COMMENT '그룹 ID',
    `GROUP_AUTH_ID` VARCHAR(10) NOT NULL COMMENT '권한 코드',
    `MEMBER_ID` VARCHAR(20) NOT NULL COMMENT '회원 ID',
    `JOINED_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '가입일시',
    `LAST_ACTIVITY_DATE` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '마지막 활동일시',
    PRIMARY KEY (`GROUP_USER_ID`),
    FOREIGN KEY (`GROUP_ID`) REFERENCES `그룹` (`GROUP_ID`),
    FOREIGN KEY (`MEMBER_ID`) REFERENCES `회원` (`MEMBER_ID`),
    FOREIGN KEY (`GROUP_AUTH_ID`) REFERENCES `그룹 권한` (`AUTH_ID`)
);

-- 6. 디렉토리 테이블
CREATE TABLE `디렉토리` (
    `DIRECTORY_ID` INT NOT NULL AUTO_INCREMENT COMMENT '디렉토리 ID',
    `CONTAINER_ID` INT NOT NULL COMMENT '방 번호',
    `GROUP_ID` INT NOT NULL COMMENT '그룹 ID',
    `DIRECTORY_NAME` VARCHAR(30) NOT NULL COMMENT '디렉토리 이름',
    `DIRECTORY_ROOT` VARCHAR(30) NOT NULL COMMENT '상위 디렉토리',
    PRIMARY KEY (`DIRECTORY_ID`),
    FOREIGN KEY (`CONTAINER_ID`) REFERENCES `컨테이너` (`CONTAINER_ID`),
    FOREIGN KEY (`GROUP_ID`) REFERENCES `그룹` (`GROUP_ID`)
);

-- 7. 채팅 테이블
CREATE TABLE `채팅` (
    `CHAT_ID` INT NOT NULL AUTO_INCREMENT COMMENT '채팅 ID',
    `MEMBER_ID` VARCHAR(20) NOT NULL COMMENT '회원 ID',
    `GROUP_ID` INT NOT NULL COMMENT '그룹 ID',
    `CHAT_TEXT` VARCHAR(50) NOT NULL COMMENT '채팅 내용',
    `CHAT_DATE` DATE NOT NULL COMMENT '채팅 날짜',
    PRIMARY KEY (`CHAT_ID`),
    FOREIGN KEY (`MEMBER_ID`) REFERENCES `회원` (`MEMBER_ID`),
    FOREIGN KEY (`GROUP_ID`) REFERENCES `그룹` (`GROUP_ID`)
);

-- 8. 문제 테이블
CREATE TABLE `문제` (
    `QUESTION_ID` INT NOT NULL AUTO_INCREMENT COMMENT '문제 ID',
    `CONTAINER_ID` INT NOT NULL COMMENT '방 번호',
    `GROUP_ID` INT NOT NULL COMMENT '그룹 ID',
    `QUESTION_TITLE` VARCHAR(30) NOT NULL COMMENT '제목',
    `QUESTION_DESCRIPTION` VARCHAR(300) NOT NULL COMMENT '내용',
    `QUESTION` VARCHAR(300) NOT NULL COMMENT '제한사항',
    `QUESTION_INPUT` VARCHAR(100) NOT NULL COMMENT '입력 예시',
    `QUESTION_OUTPUT` VARCHAR(100) NOT NULL COMMENT '출력 예시',
    `QUESTION_TIME` FLOAT NOT NULL COMMENT '시간 제한',
    `QUESTION_MEM` INT NOT NULL COMMENT '메모리 제한',
    PRIMARY KEY (`QUESTION_ID`),
    FOREIGN KEY (`CONTAINER_ID`) REFERENCES `컨테이너` (`CONTAINER_ID`),
    FOREIGN KEY (`GROUP_ID`) REFERENCES `그룹` (`GROUP_ID`)
);

-- 9. 테스트케이스 테이블
CREATE TABLE `테스트케이스` (
    `CASE_ID` INT NOT NULL AUTO_INCREMENT COMMENT '케이스ID',
    `QUESTION_ID` INT NOT NULL COMMENT '문제 ID',
    `CASE_EX` VARCHAR(200) NOT NULL COMMENT '예제',
    `CASE_ANSWER` VARCHAR(200) NOT NULL COMMENT '정답',
    `CASE_CHECK` BOOLEAN NOT NULL DEFAULT true COMMENT 'true: 문제에 보여짐 & 채점시 적용, false : 채점시 적용',
    PRIMARY KEY (`CASE_ID`, `QUESTION_ID`),
    FOREIGN KEY (`QUESTION_ID`) REFERENCES `문제` (`QUESTION_ID`)
);

-- 10. 코드 파일 경로 테이블
CREATE TABLE `코드 파일 경로` (
    `CODE_FILE_ID` INT NOT NULL AUTO_INCREMENT COMMENT '파일 ID',
    `DIRECTORY_ID` INT NOT NULL COMMENT '디렉토리 ID',
    `CODE_FILE_PATH` VARCHAR(100) NOT NULL COMMENT '파일 경로',
    `CODE_FILE_NAME` VARCHAR(20) NOT NULL COMMENT '파일 이름',
    `CODE_FILE_UPLOAD_DT` DATE NOT NULL DEFAULT (CURRENT_DATE) COMMENT '파일 업로드일',
    `CODE_FILE_CREATE_DT` DATE NOT NULL DEFAULT (CURRENT_DATE) COMMENT '파일 생성일',
    PRIMARY KEY (`CODE_FILE_ID`),
    FOREIGN KEY (`DIRECTORY_ID`) REFERENCES `디렉토리` (`DIRECTORY_ID`)
);

-- 11. 코드 텍스트 테이블
CREATE TABLE `코드 텍스트` (
    `CODE_ID` INT NOT NULL AUTO_INCREMENT COMMENT '코드 ID',
    `DIRECTORY_ID` INT NOT NULL COMMENT '디렉토리 ID',
    `CODE_NAME` VARCHAR(20) NOT NULL COMMENT '파일명',
    `CODE_TEXT` TEXT NOT NULL COMMENT '코드 내용',
    `CODE_UPLOAD_DT` DATE NOT NULL DEFAULT (CURRENT_DATE) COMMENT '파일 업로드일',
    `CODE_CREATE_DT` DATE NOT NULL DEFAULT (CURRENT_DATE) COMMENT '파일 생성일',
    PRIMARY KEY (`CODE_ID`),
    FOREIGN KEY (`DIRECTORY_ID`) REFERENCES `디렉토리` (`DIRECTORY_ID`)
);

-- 12. 결과 테이블
CREATE TABLE `결과 테이블` (
    `RESULT_ID` VARCHAR(255) NOT NULL COMMENT '결과 ID',
    `CASE_ID` INT NOT NULL COMMENT '케이스ID',
    `QUESTION_ID` INT NOT NULL COMMENT '문제 ID',
    `MEMBER_ID` VARCHAR(20) NOT NULL COMMENT '회원 ID',
    `RESULT_ANSWER` VARCHAR(20) NOT NULL COMMENT '실행 결과 (정답/실패/런타임에러)',
    `RESULT_TIME` FLOAT NOT NULL COMMENT '실행 시간',
    `RESULT_MEMORY` INT NOT NULL COMMENT '사용 메모리양',
    `RESULT_LANG` VARCHAR(20) NOT NULL COMMENT '사용 언어',
    PRIMARY KEY (`RESULT_ID`),
    FOREIGN KEY (`CASE_ID`, `QUESTION_ID`) REFERENCES `테스트케이스` (`CASE_ID`, `QUESTION_ID`),
    FOREIGN KEY (`MEMBER_ID`) REFERENCES `회원` (`MEMBER_ID`)
);

-- 13. 진행률 테이블
CREATE TABLE `진행률` (
    `PROGRESS_ID` INT NOT NULL AUTO_INCREMENT COMMENT '진행률ID',
    `DIRECTORY_ID` INT NOT NULL COMMENT '디렉토리 ID',
    `GROUP_USER_ID` INT NOT NULL COMMENT '그룹 유저 PK',
    `PROGRESS_COMPLETE` INT NOT NULL COMMENT '진행률',
    PRIMARY KEY (`PROGRESS_ID`),
    FOREIGN KEY (`DIRECTORY_ID`) REFERENCES `디렉토리` (`DIRECTORY_ID`),
    FOREIGN KEY (`GROUP_USER_ID`) REFERENCES `그룹 회원` (`GROUP_USER_ID`)
);

-- 기본 데이터 삽입
INSERT INTO `그룹 권한` (`AUTH_ID`, `AUTH_NAME`) VALUES 
('ROOT', '관리자'),
('USER', '일반 사용자');

-- 테스트용 회원 데이터
INSERT INTO `회원` (`MEMBER_ID`, `MEMBER_NAME`, `MEMBER_PW`, `MEMBER_EMAIL`) VALUES
('test001', '테스트유저1', 'password123', 'test1@example.com'),
('test002', '테스트유저2', 'password123', 'test2@example.com'),
('test003', '테스트유저3', 'password123', 'test3@example.com');

-- 인덱스 추가 (성능 최적화)
CREATE INDEX idx_group_member_activity ON `그룹 회원` (`LAST_ACTIVITY_DATE`);
CREATE INDEX idx_container_owner ON `컨테이너` (`OWNER_ID`);
CREATE INDEX idx_container_auth ON `컨테이너` (`CONTAINER_AUTH`);